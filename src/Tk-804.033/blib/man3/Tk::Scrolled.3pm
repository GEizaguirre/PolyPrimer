.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Scrolled 3pm"
.TH Scrolled 3pm "2018-12-25" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tk::Scrolled \- Create a widget with attached scrollbar(s)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
    \fI\f(CI$whatever\fI\fR = \fI\f(CI$parent\fI\fR\->\fBScrolled\fR(\fIWhatever\fR ?,\fB\-scrollbars\fR=>\fIwhere\fR? ?,...?);
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
To stop a flood of \fBScrlWhatever\fR widgets Perl/Tk introcuded the special
constructor \fBScrolled\fR.  \fBScrolled\fR creates a widget of the given Class
\&\fIWhatever\fR with attached scrollbar(s).
.SH "OPTIONS"
.IX Header "OPTIONS"
All options beside \fB\-scrollbars\fR explained below are passed to
the \fIWhatever\fR widget constructor.
.IP "\-scrollbars" 4
.IX Item "-scrollbars"
Expects as argument the position where the scrollbars should be
created:  \fBw\fR, \fBe\fR or \fBn\fR, \fBs\fR or a combination of
them.  If the one or both positions are prefixed with \fBo\fR the
scrollbar will only show up if there is a 'real' need to scroll.
.SH "ADVERTISED SUBWIDGETS"
.IX Header "ADVERTISED SUBWIDGETS"
See \*(L"Subwidget\*(R" in Tk::mega how to use advertised widgets.
.IP "scrolled" 4
.IX Item "scrolled"
the scrolled widget
.IP "\fIwidget\fR" 4
.IX Item "widget"
same as \fBscrolled\fR above.  \fIwidget\fR is the kind of widget passed
to scrolled as first argument in all lowercase.
.IP "xscrollbar" 4
.IX Item "xscrollbar"
the \fBScrollbar\fR widget used for horizontal scrolling (if it exists)
.IP "yscrollbar" 4
.IX Item "yscrollbar"
the \fBScrollbar\fR widget used for vertical scrolling (if it exists)
.IP "corner" 4
.IX Item "corner"
a frame in the corner between the vertical and horizontal scrolbar
.SH "BUGS"
.IX Header "BUGS"
If a widget does not support \fI\-{x,y}scrollcommand\fR options,
\&\fBScrolled\fR does not complain if the specified widget class does
not support them.  E.g.,
.PP
    \fI\f(CI$parent\fI\fR\->\fBScrolled\fR(\fB'Button'\fR, ...)
.PP
One does not get an error message or warning when one tries to
configure scrollbars after the widget construction:
.PP
    \fI\f(CI$ascrolled\fI\fR\->\fBconfigure\fR(\fB\-scrollbars\fR => \fB'e'\fR);
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tk::Scrollbar
.SH "KEYWORDS"
.IX Header "KEYWORDS"
scrolled, scrollbar
