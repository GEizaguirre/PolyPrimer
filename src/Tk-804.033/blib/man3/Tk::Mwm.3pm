.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Mwm 3pm"
.TH Mwm 3pm "2018-12-25" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tk::Mwm \- Communicate with the Motif(tm) window manager.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
    \fBuse Tk::Mwm;\fR
.PP
    \fI\f(CI$toplevel\fI\fR\->\fBmwm\fR\fIOption\fR?(\fIargs\fR)?
.PP
    \fI\f(CI$toplevel\fI\fR\->\fBmwm\fR(\fIoption\fR ?,\fIargs\fR?)
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Interface to special extentions supported by mwm.
.SH "METHODS"
.IX Header "METHODS"
.IP "\fI\f(CI$toplevel\fI\fR\->\fBmwmDecoration\fR?(?option??=>value? ?,...?)?" 4
.IX Item "$toplevel->mwmDecoration?(?option??=>value? ?,...?)?"
When no options are given, this method returns the values of all the
decorations options for the toplevel window with the \fI\f(CI$toplevel\fI\fR.
When only one option is given without specifying the value, the
current value of that option is returned.
When more than one \*(L"option-value\*(R" pairs are passed to this method,
the specified values will be assigned to the corresponding options. As
a result, the appearance of the Motif decorations around the toplevel
window will be changed.
Possible options are: \fB\-border\fR, \fB\-menu\fR, \fB\-maximize\fR,
\&\fB\-minimize\fR, \fB\-resizeh\fR and \fB\-title\fR. The value must be a
Boolean value. The values returned by this command are undefined when
the window is not managed by mwm.
.IP "\fI\f(CI$toplevel\fI\fR\->\fBmwmIsmwmrunning\fR" 4
.IX Item "$toplevel->mwmIsmwmrunning"
This returns value is true if mwm is running on the screen where the specified
window is located, false otherwise.
.IP "\fI\f(CI$toplevel\fI\fR\->\fBmwmProtocol\fR" 4
.IX Item "$toplevel->mwmProtocol"
When no additional options are given, this method returns all
protocols associated with this toplevel window.
.IP "\fI\f(CI$toplevel\fI\fR\->\fBmwmProtocol\fR(\fBactivate\fR => \fIprotocol_name\fR)" 4
.IX Item "$toplevel->mwmProtocol(activate => protocol_name)"
Activate the mwm protocol message in mwm's menu.
.IP "\fI\f(CI$toplevel\fI\fR\->\fBMwmProtocol\fR(\fBadd\fR => \fIprotocol_name\fR, \fImenu_message\fR)" 4
.IX Item "$toplevel->MwmProtocol(add => protocol_name, menu_message)"
Add a new mwm protocol message for this toplevel window. The
message is identified by the string name specified in
\&\fIprotocol_name\fR.  A menu item will be added into mwm's menu as
specified by \fImenu_message\fR.  Once a new mwm protocol message is
added to a toplevel, it can be caught by the \s-1TK\s0 \fBprotocol\fR
method. Here is an example:
.Sp
    \fI\f(CI$toplevel\fI\fR\->\fBmwmProtocol\fR(\fB'add'\fR => '\s-1MY_PRINT_HELLO\s0', '\*(L"Print Hello\*(R"  _H Ctrl<Key>H');
.Sp
    \fI\f(CI$toplevel\fI\fR\->\fBprotocol\fR(\fB'\s-1MY_PRINT_HELLO\s0'\fR => sub {print \*(L"Hello\*(R"});
.IP "\fI\f(CI$toplevel\fI\fR\->\fBmwmProtocol\fR(\fB'deactivate'\fR => \fIprotocol_name\fR)" 4
.IX Item "$toplevel->mwmProtocol('deactivate' => protocol_name)"
Deactivate the mwm protocol message in mwm's menu.
.IP "\fI\f(CI$toplevel\fI\fR\->\fBmwmProtocol\fR(\fB'delete'\fR => \fIprotocol_name\fR)" 4
.IX Item "$toplevel->mwmProtocol('delete' => protocol_name)"
Delete the mwm protocol message from mwm's menu. Please note that the
window manager protocol handler associated with this protocol (by the
\&\fBprotocol\fR method) is not deleted automatically. You have to
delete the protocol handle explicitly.  E.g.:
.Sp
    \fI\f(CI$mw\fI\fR\->\fBmwmProtocol\fR(\fB'delete'\fR => '\s-1MY_PRINT_HELLO\s0');
.Sp
    \fI\f(CI$mw\fI\fR\->\fBprotocol\fR(\fB'\s-1MY_PRINT_HELLO\s0'\fR => '');
.SH "BUGS"
.IX Header "BUGS"
This is a Tix extension which perl/Tk has adopted. It has not been
tested as perl/Tk's author has not got round to installing a Motif Window
Manager.
.PP
On some versions of mwm, the \fB\-border\fR will not disappear unless
\&\fB\-resizeh\fR is turned off. Also, the \fB\-title\fR will not disappear
unless all of \fB\-title\fR, \fB\-menu\fR, \fB\-maximize\fR and
\&\fB\-minimize\fR are turned off.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tk::Wm
Tk::tixWm
Tk::Toplevel
.SH "KEYWORDS"
.IX Header "KEYWORDS"
window manager, mwm, \s-1TIX\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Ioi Kim Lam \- ioi@graphics.cis.upenn.edu
