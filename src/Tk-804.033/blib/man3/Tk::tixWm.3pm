.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "tixWm 3pm"
.TH tixWm 3pm "2013-11-15" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tk::tixWm \- Tix's addition to the standard TK wm command.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
    \fI\f(CI$widget\fI\fR\->\fBwmCapture\fR
.PP
    \fI\f(CI$widget\fI\fR\->\fBwmRelease\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBwmCapture\fR and the \fBwmRelease\fR methods change the
toplevel attribute of Tk widgets.
.SH "METHODS"
.IX Header "METHODS"
.IP "\fI\f(CI$widget\fI\fR\->\fBwmCapture\fR" 4
.IX Item "$widget->wmCapture"
Converts the toplevel window specified by \fI\f(CI$widget\fI\fR into a non-toplevel
widget. Normally this command is called to convert a Toplevel widget
into a Frame widget. The newly-converted frame widget is
un-mapped from the screen. To make it appear inside its parent, you
must call a geometry manager (e.g. grid or pack) explictly.
.IP "\fI\f(CI$widget\fI\fR\->\fBwmRelease\fR" 4
.IX Item "$widget->wmRelease"
Makes the non-toplevel window specified by \fI\f(CI$widget\fI\fR into a toplevel
widget. Normally this command is called to convert a Frame widget
into a Toplevel widget, but it can also be used on any
non-toplevel widget (e.g, label). The newly-converted toplevel window
is in a \fBwithdrawn\fR state. To make it appear on the screen, you must call
\&\fBdeiconify\fR after calling \fBwmRelease\fR.
.Sp
Any data associated with \fI\f(CI$widget\fI\fR via \fBwm\fR methods (icon, protocol,
command etc.) are released, and must be re-established if window is later
re-captured.
.SH "BUGS"
.IX Header "BUGS"
\&\fBwmCapture\fR does not exist in the Win32 window manager code.
.PP
How these methods interact with perl/Tk's class hierarchy is not yet clear.
In particular a \fBwmRelease\fRd window will not automatically ``\fIinherit\fR''
the \fBTk::Wm\fR methods, however a \fBwmCapture\fRd window still will.
(A \fBrelease\fRd \fBLabel\fR might make a good candidate for an \fBIcon\fR.)
.SH "AUTHORS"
.IX Header "AUTHORS"
Ioi Kim Lam \- ioi@graphics.cis.upenn.edu wrote original Tix version.
Updated for tk8.0, Win32 and perl by Nick Ing-Simmons.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tk::Wm
Tk::Mwm
Tk::Frame
Tk::Toplevel
.SH "KEYWORDS"
.IX Header "KEYWORDS"
window manager, wm, \s-1TIX\s0
