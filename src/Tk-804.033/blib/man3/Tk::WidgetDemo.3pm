.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "WidgetDemo 3pm"
.TH WidgetDemo 3pm "2018-12-25" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tk::WidgetDemo \- create a standard widget demonstration window.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 9
\& use WidgetDemo;
\& my $TOP = $MW\->WidgetDemo(
\&     \-name             => $demo,
\&     \-text             => \*(AqLearn how to write a widget demonstration!\*(Aq,
\&     \-title            => \*(AqWidgetDemo Demonstration\*(Aq,
\&     \-iconname         => \*(AqWidgetDemo\*(Aq,
\&     \-geometry_manager => \*(Aqgrid\*(Aq,
\&     \-font             => $FONT,
\& );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This constructor builds a standard widget demonstration window, composed of
three frames.  The top frame contains descriptive demonstration text.  The
bottom frame contains the \*(L"Dismiss\*(R" and \*(L"See Code\*(R" buttons.  The middle frame
is demonstration container, which came be managed by either the pack or grid
geometry manager.
.PP
The \-text attribute is supplied to a Label widget, which is left-adjusted
with \-wraplength set to 4 inches.  If you require different specifications
then pass an array to \-text; the first element is the text string and
the remaining array elements are standard Label widget attributes \- WidgetDemo
will rearrange things as required..
.PP
.Vb 1
\&    \-text => [\*(AqHello World!\*(Aq, qw/\-wraplength 6i/],
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Steve Lidie <Stephen.O.Lidie@Lehigh.EDU>
.SH "HISTORY"
.IX Header "HISTORY"
lusol@Lehigh.EDU, \s-1LUCC, 97/02/11\s0
lusol@Lehigh.EDU, \s-1LUCC, 97/06/07\s0
Stephen.O.Lidie@Lehigh.EDU, \s-1LUCC, 97/06/07\s0
 . Add \fIDelegates()\fR call that obviates the need for \fITop()\fR.  Many thanks to
   Achim Bohnet for this patch.
 . Fix \-title so that it works.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 1997 \- 1998 Stephen O. Lidie. All rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
