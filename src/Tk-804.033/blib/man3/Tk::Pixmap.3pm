.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Pixmap 3pm"
.TH Pixmap 3pm "2013-11-15" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tk::Pixmap \- Create color images from XPM files.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
    \fI\f(CI$widget\fI\fR\->\fBPixmap\fR?(\fIname\fR?,\fIoptions\fR?)?
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1XPM\s0 is a popular X Window image file format for storing color icons.
The \fBPixmap\fR image type can be used to create color images using \s-1XPM\s0 files.
.PP
Pixmaps support the following \fIoptions\fR:
.IP "\fB\-data\fR => \fIstring\fR" 4
.IX Item "-data => string"
Specifies the contents of the source pixmap as a string.  The string
must adhere to the \s-1XPM\s0 file format (e.g., as generated by the
\&\fB\f(BIpixmap\fB\|(1)\fR program). If both the \fB\-data\fR and \fB\-file\fR
options are specified, the \fB\-data\fR option takes precedence.
Please note that the \s-1XPM\s0 file parsing code in the xpm library is
somewhat fragile. The first line of the string must be "\fB/* \s-1XPM\s0\fR
*/" or otherwise a segmatation fault will be caused.
.IP "\fB\-file\fR => \fIname\fR" 4
.IX Item "-file => name"
\&\fIname\fR gives the name of a file whose contents define the source
pixmap.  The file must adhere to the \s-1XPM\s0 file format (e.g., as
generated by the \fB\f(BIpixmap\fB\|(1)\fR program).
.SH "IMAGE METHODS"
.IX Header "IMAGE METHODS"
When a pixmap image is created, Tk also creates a new object.
This object supports the \fBconfigure\fR and \fBcget\fR methods
described in Tk::options which can be used to enquire and
modify the options described above.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tk::Image
.SH "KEYWORDS"
.IX Header "KEYWORDS"
pixmap, image, tix
